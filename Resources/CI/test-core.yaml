trigger:
  batch: true
  branches:
    include:
    - master
    - develop
  paths:
    include:
    - 'DryWetMidi/*'
    - 'DryWetMidi.Tests/*'
    - 'DryWetMidi.Tests.Common/*'
    - 'Resources/CI/test-core.yaml'
    - 'Resources/CI/Templates/stage-build-native-libs.yaml'
    - 'Resources/CI/Templates/step-copy-native-libraries-near-csproj.yaml'
    - 'Resources/CI/Templates/step-collect-logs.yaml'
    - 'Resources/CI/Templates/step-setup-framework.yaml'
    - 'Resources/CI/Templates/step-build-tests.yaml'
    exclude:
    - 'DryWetMidi/Devices/*'
    - 'DryWetMidi.Tests/Devices/*'

pr:
  branches:
    include:
    - develop
  paths:
    include:
    - 'DryWetMidi/*'
    - 'DryWetMidi.Tests/*'
    - 'DryWetMidi.Tests.Common/*'
    - 'Resources/CI/test-core.yaml'
    - 'Resources/CI/Templates/stage-build-native-libs.yaml'
    - 'Resources/CI/Templates/step-copy-native-libraries-near-csproj.yaml'
    - 'Resources/CI/Templates/step-collect-logs.yaml'
    - 'Resources/CI/Templates/step-setup-framework.yaml'
    - 'Resources/CI/Templates/step-build-tests.yaml'
    exclude:
    - 'DryWetMidi/Multimedia/*'
    - 'DryWetMidi.Tests/Multimedia/*'

variables:
- group: DryWetMIDI-Common-Variables

name: TestCore_$(Framework)_$(SourceBranchName)_$(LibraryVersion)$(Rev:.r)

stages:
- template: Templates/stage-build-native-libs.yaml
    
- stage: RunTests
  displayName: Run tests
  pool:
    vmImage: '$(VmImage)'
  jobs:
  - job: RunTests
    displayName: Run tests
    steps:
    - template: Templates/step-copy-native-libraries-near-csproj.yaml
    
    - template: Templates/step-setup-framework.yaml
      parameters:
        framework: '$(Framework)'
    
    - template: Templates/step-build-tests.yaml
      parameters:
        tfm: '$(Tfm)'
    
    - task: DotNetCoreCLI@2
      displayName: Run unit tests (Windows)
      condition: not(eq(variables.VmImage, 'macos-latest'))
      inputs:
        command: 'test'
        projects: 'DryWetMidi.Tests/Melanchall.DryWetMidi.Tests.csproj'
        arguments: '--blame --no-build --configuration $(TestBuildConfiguration) --filter (FullyQualifiedName~Melanchall.DryWetMidi.Tests.Core|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Common|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Composing|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Interaction|FullyQualifiedName~Melanchall.DryWetMidi.Tests.MusicTheory|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Standards|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Tools|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Utilities) --framework $(Tfm) --verbosity normal --diag diagnostic.log --logger "console;verbosity=normal"'
        
    - task: DotNetCoreCLI@2
      displayName: Run unit tests (non-Windows)
      condition: eq(variables.VmImage, 'macos-latest')
      inputs:
        command: 'test'
        projects: 'DryWetMidi.Tests/Melanchall.DryWetMidi.Tests.csproj'
        arguments: '--blame --no-build --configuration $(TestBuildConfiguration) --filter ((FullyQualifiedName~Melanchall.DryWetMidi.Tests.Core|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Common|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Composing|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Interaction|FullyQualifiedName~Melanchall.DryWetMidi.Tests.MusicTheory|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Standards|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Tools|FullyQualifiedName~Melanchall.DryWetMidi.Tests.Utilities)&Name!=CheckValidFilesReadingByReferences) --framework $(Tfm) --verbosity normal --diag diagnostic.log --logger "console;verbosity=normal"'
        
    - template: Templates/step-collect-logs.yaml
