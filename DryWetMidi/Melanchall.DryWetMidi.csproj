<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net45</TargetFrameworks>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <LangVersion>6</LangVersion>
    <Configurations>Debug;Release;Coverage;DebugTest;ReleaseTest</Configurations>
  </PropertyGroup>

  <PropertyGroup Label="Package">
    <PackageId>Melanchall.DryWetMidi</PackageId>
    <Version>6.1.5</Version>
    <Authors>melanchall</Authors>
    <Owners>melanchall</Owners>
    <licenseUrl>https://github.com/melanchall/drywetmidi/blob/master/LICENSE</licenseUrl>
    <PackageProjectUrl>https://github.com/melanchall/drywetmidi</PackageProjectUrl>
    <PackageIconUrl>https://raw.githubusercontent.com/melanchall/drywetmidi/master/Resources/NuGet/icon.png</PackageIconUrl>
    <PackageIcon>icon.png</PackageIcon>
    <RepositoryUrl>https://github.com/melanchall/drywetmidi</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageReleaseNotes>https://github.com/melanchall/drywetmidi/releases/tag/v6.1.5</PackageReleaseNotes>
    <Description>
      DryWetMIDI is the .NET library to work with MIDI files and MIDI devices. It allows:

      * Read, write and create Standard MIDI Files (SMF). It is also possible to read RMID files where SMF wrapped to RIFF chunk.
      * Work with MIDI devices: send/receive MIDI data, play back and record MIDI data.
      * Finely adjust process of reading and writing. It allows, for example, to read corrupted files and repair them, or build MIDI file validators.
      * Implement custom meta events and custom chunks that can be write to and read from MIDI files.
      * Manage MIDI data either with low-level objects, like event, or high-level ones, like note.
      * Build musical compositions.
      * Perform complex musical tasks like quantizing, notes splitting or converting MIDI files to CSV.
    </Description>
    <Copyright>Copyright Â© Melanchall 2023</Copyright>
    <PackageTags>midi smf music composing notes chords device playback record</PackageTags>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>strongnamekey.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Coverage'">
    <DefineConstants>COVERAGE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TF_BUILD)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='DebugTest'">
    <DefineConstants>TRACE;TEST</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='ReleaseTest'">
    <DefineConstants>TRACE;TEST</DefineConstants>
  </PropertyGroup>

  <ItemGroup Label="Native">
    <None Include="Melanchall_DryWetMidi_Native32.dll">
      <PackagePath>build\</PackagePath>
      <Pack>true</Pack>
    </None>
    <None Include="Melanchall_DryWetMidi_Native64.dll">
      <PackagePath>build\</PackagePath>
      <Pack>true</Pack>
    </None>
    <None Include="Melanchall_DryWetMidi_Native64.dylib">
      <PackagePath>build\</PackagePath>
      <Pack>true</Pack>
    </None>
    <None Include="Melanchall.DryWetMidi.targets">
      <PackagePath>build\</PackagePath>
      <Pack>true</Pack>
    </None>
  </ItemGroup>

  <ItemGroup Label="Resources">
    <Folder Include="Properties\" />
    <None Include="..\Resources\NuGet\icon.png" Pack="true" PackagePath="\" />
    <None Include="..\README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

</Project>
